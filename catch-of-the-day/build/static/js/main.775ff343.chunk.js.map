{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","desc","image","addFish","fishForm","reset","input","e","createFish","EditFishForm","handleChange","console","log","currentTarget","updatedFish","objectSpread","defineProperty","parseFloat","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props","details","buttonText","src","alt","addToOrder","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.775ff343.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n  return (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">of</span>\n          <span className=\"the\">the</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component  {\n  createFish(event) {\n    event.preventDefault();\n    const fish = {\n      name: this.name.value,\n      price: this.price.value,\n      status: this.status.value,\n      desc: this.desc.value,\n      image: this.image.value,\n    }\n    this.props.addFish(fish);\n    this.fishForm.reset();\n  }\n\n  render() {\n    return (\n      <form ref={(input) => this.fishForm = input} className=\"fish-edit\" onSubmit={(e) => this.createFish(e)}>\n        <input ref={(input) => this.name = input} type=\"text\" placeholder=\"Fish Name\" />\n        <input ref={(input) => this.price = input}type=\"text\" placeholder=\"Fish Price\" />\n        <select ref={(input) => this.status = input}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n        <textarea ref={(input) => this.desc = input} placeholder=\"Fish Desc\"></textarea>\n        <input ref={(input) => this.image = input} type=\"text\" placeholder=\"Fish Image\" />\n        <button type=\"submit\">+ Add Item</button>\n      </form>\n    )\n  }\n}\n\nAddFishForm.propTypes = {\n  addFish: PropTypes.func.isRequired\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]:\n        event.currentTarget.name === 'price'\n          ? parseFloat(event.currentTarget.value)\n          : event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDxMbMy2xv53MXbymfyBlctB7XX5yMBYl4\",\n  authDomain: \"catch-of-the-day-ecd63.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-ecd63.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1 .Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  render() {\n    const { details, index } = this.props;\n    const isAvailable = details.status === 'available';\n    const buttonText = isAvailable ? 'Add To Order' : 'Sold Out!';\n    return (\n      <li className=\"menu-fish\">\n        <img src={details.image} alt={details.name} />\n        <h3 className=\"fish-name\">\n          {details.name}\n          <span className=\"price\">{formatPrice(details.price)}</span>\n        </h3>\n        <p>{details.desc}</p>\n        <button onClick={() => this.props.addToOrder(index)} disabled={!isAvailable}>{buttonText}</button>\n      </li>\n    )\n  }\n}\n\nFish.propTypes = {\n  details: PropTypes.object.isRequired,\n  index: PropTypes.string.isRequired,\n  addToOrder: PropTypes.func.isRequired,\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3.  update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = (props) => {\n  return (\n    <h2>Error! Not Found!!</h2>\n  )\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from \"./components/Router\";\nimport './css/style.css';\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}